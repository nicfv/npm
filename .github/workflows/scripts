#!/usr/bin/env bash

# Extract local package name and version and changelog version
package_name="$(npm --silent v ./ name)"
echo "Package Name  = ${package_name}"
local_version="$(npm --silent v ./ version)"
echo "Local Version = ${local_version}"
log_version="$(grep -oE '[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -n1)"
echo "Log Version   = ${log_version}"

# Make sure package.json and changelog versions match
if [[ "${local_version}" != "${log_version}" ]] ; then
    echo 'Package and changelog versions do not match!'
    exit 1
fi

# Compile and test the package
mkdir -p Example && tsc && node dist/test.js && rm dist/test.js types/test.d.ts && cd examples

# Run all the examples for the package
for example in *.mjs ; do
    echo "Running example ${example}..."
    {
        cat "${example%.*}.md"
        echo
        echo '## Installation'
        echo "Follow these steps to create a new project workspace and install the ${package_name} dependency to run this example."
        echo '```shell'
        echo 'npm init -y'
        echo "npm i ${package_name}@${local_version}"
        echo "touch ${example// /_}"
        echo "open ${example// /_}"
        echo '```'
        echo '## Source'
        echo 'Copy and paste this source code into the newly created file.'
        echo '```js'
        cat "${example}"
        echo
        echo '```'
        echo '## Output'
        echo 'Execute this script to run the file and generate an output.'
        echo '```shell'
        echo "node ${example// /_}"
        echo '```'
        echo 'You should expect to see an output similar to the one below.'
        echo '```text'
        node "${example}" || exit 1
        echo '```'
        echo '<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>'
    } > "../Example/${example%.*}.md"
done
