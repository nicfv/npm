#!/usr/bin/env bash

# Extract local package name and version and changelog version
package_name="$(npm --silent v ./ name)"
echo "Package Name  = ${package_name}"
local_version="$(npm --silent v ./ version)"
echo "Local Version = ${local_version}"
log_version="$(grep -oE '[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -n1)"
echo "Log Version   = ${log_version}"

# Make sure package.json and changelog versions match
if [[ "${local_version}" != "${log_version}" ]] ; then
    echo 'Package and changelog versions do not match!'
    exit 1
fi

# Compile and test the package
mkdir -p Example && npx tsc && node dist/test.js && rm dist/test.js types/test.d.ts || exit 1

# Run all the examples for the package
if [ -d examples ] ; then
    # Run basic/simple examples in NodeJS
    cd examples
    for example in *.mjs ; do
        echo "Running example ${example}..."
        {
            cat "${example%.*}.md"
            echo
            echo '## Installation'
            echo "Follow these steps to create a new project workspace and install the ${package_name} dependency to run this example."
            echo '```shell'
            echo "mkdir ${example}_demo"
            echo "cd ${example}_demo"
            echo 'npm init -y'
            echo "npm i ${package_name}@${local_version}"
            echo "touch ${example// /_}"
            echo "open ${example// /_}"
            echo '```'
            echo '## Source'
            echo 'Copy and paste this source code into the newly created file.'
            echo '```js'
            cat "${example}"
            echo
            echo '```'
            echo '## Output'
            echo 'Execute this script to run the file and generate an output.'
            echo '```shell'
            echo "node ${example// /_}"
            echo '```'
            echo 'You should expect to see an output similar to the one below.'
            echo '```text'
            node "${example}" || exit 1
            echo '```'
            echo '<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>'
        } > "../Example/${example%.*}.md"
    done
elif [ -d example-ui ] ; then
    # Run UI examples using webpack
    cd example-ui
    for exampledir in */ ; do
        example="${exampledir%/}"
        projectdir="${example// /_}_demo"
        echo "Running example ${example}..."
        cd "${example}" && npm i && npx webpack --mode production
        {
            cat *.md
            echo
            echo '## Installation'
            echo "Follow these steps to create a new [webpack](https://webpack.js.org/) project and install the ${package_name} dependency to run this example."
            echo '```shell'
            echo '# Initialize project'
            echo "mkdir ${projectdir}"
            echo "cd ${projectdir}"
            echo 'npm init -y'
            echo "npm i ${package_name}@${local_version} webpack webpack-cli"
            echo '# Create project structure'
            echo 'touch index.html'
            echo 'mkdir src'
            echo 'touch src/index.js'
            echo '# Open new files'
            echo 'open index.html'
            echo 'open src/index.js'
            echo '```'
            echo '## Source'
            echo 'Copy and paste the following source code blocks into the newly created files.'
            echo '### `index.html`'
            echo '```html'
            cat 'index.html' || exit 1
            echo
            echo '```'
            echo '### `index.js`'
            echo '```js'
            cat 'src/index.js' || exit 1
            echo
            echo '```'
            echo '## Build Project'
            echo "In the base project directory \`${projectdir}/\`, run the following commands, and then open your \`index.html\` file in a web browser!"
            echo '```shell'
            echo 'npx webpack --mode development # or --mode production'
            echo '```'
        } > "../../Example/${example}.md"
        cd ..
    done
else
    exit 1
fi
