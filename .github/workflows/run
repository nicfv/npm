#!/usr/bin/env bash

# Fail if node or npm not found
node -v || exit 1
npm -v || exit 1

# Run tests on ci workflow
cd src || exit 1
npm run clean && npm i && npm test || exit 1

# Check for and set npm token if publish flag is set
if [[ "${1}" == 'publish' ]] ; then
    if [[ -z "${NPM_TOKEN}" ]] ; then
        echo 'Missing environment variable NPM_TOKEN'
        exit 1
    else
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}" || exit 1
        # Check each directory and publish each project
        cd packages || exit 1
        for dir in */ ; do
            echo -e "\n=== Checking directory '${dir}' ===\n"
            # Skip directories that are not an npm project
            npm --silent v "${dir}" || {
                echo "${dir} is not an NPM project"
                continue
            }
            # Set working directory to package directory
            cd "${dir}" || exit 1
            # Extract package name, changelog version, and package version
            package_name="$(npm --silent v ./ name)"
            echo "Package Name   = ${package_name}"
            local_version="$(npm --silent v ./ version)"
            echo "Local Version  = ${local_version}"
            log_version="$(grep -oE '[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -n1)"
            echo "Log Version    = ${log_version}"
            # Determine latest published version on the registry
            npm_version="$(npm --silent v "${package_name}" version)"
            echo "Version on NPM = ${npm_version}"
            # Make sure package.json and changelog versions match
            if [[ "${local_version}" != "${log_version}" ]] ; then
                echo 'Package and changelog versions do not match!'
                exit 1
            fi
            # Make sure that the local version number is higher before publishing
            if [[ "${local_version}" == "${npm_version}" ]] ; then
                echo 'Skipping publish step'
            else
                echo 'Publishing...'
                npm publish || exit 1
            fi
            cd ..
        done
        # Build documentation
        npm run docs
    fi
fi